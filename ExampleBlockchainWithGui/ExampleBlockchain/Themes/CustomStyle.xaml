<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:shared="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:vsm ="clr-namespace:System.Windows;assembly=PresentationFramework"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="clr-namespace:BlockchainApp.Source.Controls"
                    xmlns:utilClasses="clr-namespace:BlockchainApp.Source.Common.Utils.UtilClasses"
                    xmlns:converters="clr-namespace:BlockchainApp.Source.Common.Converters">

    <!--#region Window-->

    <SolidColorBrush x:Key="MouseOverBlueBrush" Color="#FF000096" />
    <SolidColorBrush x:Key="DefaultBlueBrush" Color="#FF000040" />
    <SolidColorBrush x:Key="DefaultWindowBrush" Color="#FF1E1E1E" />
    <SolidColorBrush x:Key="DefaultForegroundBrush" Color="#FFBABABA" />

    <Style x:Key="MyCleanWindowStyle" 
           TargetType="{x:Type mah:MetroWindow}" 
           BasedOn="{StaticResource CleanWindowStyleKey}">
        <Setter Property="TitleCharacterCasing" Value="Normal"/>
        <Setter Property="IconEdgeMode" Value="Aliased"/>
        <Setter Property="TitleAlignment" Value="-10,0,0,0"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="WindowTitleBrush" Value="{StaticResource DefaultBlueBrush}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>

    <!--#endregion-->

    <!--#region DataGrid-->

    <LinearGradientBrush x:Key="HeaderRowBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF000096" Offset="0.0" />
        <GradientStop Color="Black" Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RowBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF000040" Offset="0.0" />
        <GradientStop Color="Black" Offset="1.0" />
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="RadialProgressBarBrush">
        <GradientStop Color="Green" Offset="0.9" />
        <GradientStop Color="Black" Offset="1.0" />
    </RadialGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FF000096" />

    <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" 
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
        <Setter Property="Background" Value="{StaticResource HeaderRowBrush}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,4,0" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="MaxHeight" Value="25" />
    </Style>

    <Style BasedOn="{StaticResource MetroDataGrid}" 
           TargetType="{x:Type DataGrid}">
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="RowHeight" Value="25" />
        <Setter Property="RowBackground" Value="{StaticResource RowBrush}" />
    </Style>

    <Style x:Key="CenterAlignedCellStyle" BasedOn="{StaticResource MetroDataGridCell}" 
           TargetType="{x:Type DataGridCell}">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="0,0,1,0" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="Padding" Value="0,0,0,0" />
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style.Setters>
    </Style>

    <Style BasedOn="{StaticResource CenterAlignedCellStyle}" 
           TargetType="{x:Type DataGridCell}">
    </Style>

    <Style x:Key="LeftAlignedCellStyle" BasedOn="{StaticResource CenterAlignedCellStyle}" 
           TargetType="{x:Type DataGridCell}">
        <Style.Setters>
            <Setter Property="TextBlock.TextAlignment" Value="Left" />
            <Setter Property="Padding" Value="5,0,0,0" />
        </Style.Setters>
    </Style>

    <Style x:Key="RightAlignedCellStyle" BasedOn="{StaticResource CenterAlignedCellStyle}" 
           TargetType="{x:Type DataGridCell}">
        <Style.Setters>
            <Setter Property="TextBlock.TextAlignment" Value="Right" />
            <Setter Property="Padding" Value="0,0,5,0" />
        </Style.Setters>
    </Style>

    <Style x:Key="IconCellStyle" TargetType="iconPacks:PackIconMaterial">
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="18" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <!--#endregion-->

    <!--#region Label-->

    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <!--#endregion-->

    <!--#region Contextmenu (Default Unused)-->

    <ContextMenu x:Key="emptyContextMenu" Width="0" Height="0" Visibility="Collapsed">
    </ContextMenu>

    <!--#endregion-->

    <!--#region TextBox-->

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
        <Setter Property="Padding" Value="3,3" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="30" />
        <Setter Property="AcceptsReturn" Value="False" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="ContextMenu" Value="{StaticResource emptyContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal" />
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Disabled">
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="ReadOnly">
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ValidationStates">
                                <vsm:VisualState x:Name="Valid" />
                                <vsm:VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Opacity="1">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Background="{StaticResource TextBoxReadOnlyBackgroundBrush}" Opacity="0" />
                                <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" />
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" BorderBrush="{StaticResource DisabledVisualElement}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource DisabledVisualElement}" IsHitTestVisible="False" Opacity="0" />
                        <Border x:Name="FocusVisualElement" BorderBrush="{StaticResource TextBoxFocusedBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Opacity="0" />
                        <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ValidationErrorElement}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource TextBoxValidationToolTipTemplate}"/>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationErrorElement}" Margin="1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource LightForegroundBrush}" Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
       </Setter>
    </Style>

    <!--#endregion-->

    <!--#region RadioButton-->

    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}">
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MinHeight" Value="0" />
    </Style>

    <!--#endregion-->

    <!--#region CheckBox-->

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal" />
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="CheckStates">
                                <vsm:VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBox" />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unchecked" />
                                <vsm:VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateCheck" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unfocused" />
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ValidationStates">
                                <vsm:VisualState x:Name="Valid" />
                                <vsm:VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidUnfocused" />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidFocused" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle x:Name="normal" Opacity="1" Stroke="{StaticResource CheckBoxBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxBackgroundBrush}" Width="18" Height="18" />
                        <Rectangle x:Name="hover" Stroke="{StaticResource CheckBoxHoverBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxHoverBackgroundBrush}" Opacity="0" Width="18" Height="18" />
                        <Rectangle x:Name="pressed" Opacity="0" Stroke="{StaticResource CheckBoxPressedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxPressedBackgroundBrush}" Width="18" Height="18" />
                        <Rectangle x:Name="focused" Opacity="0" Stroke="{StaticResource CheckBoxFocusedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxFocusedBackgroundBrush}" Width="18" Height="18" />
                        <Rectangle x:Name="invalidUnfocused" Opacity="0" Stroke="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}" Width="18" Height="18" />
                        <Rectangle x:Name="invalidFocused" Opacity="0" Stroke="{StaticResource CheckBoxInvalidFocusedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxInvalidFocusedBackgroundBrush}" Width="18" Height="18" />
                        <Path x:Name="checkBox" Height="10" Width="12" Stretch="Fill" Opacity="0" Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z" Fill="{StaticResource CheckBoxCheckBackgroundBrush}" UseLayoutRounding="False" />
                        <Rectangle x:Name="IndeterminateCheck" Fill="{StaticResource CheckBoxIndeterminateCheckBackgroundBrush}" Height="3" Width="8" Opacity="0" />
                        <Rectangle x:Name="disabled" Opacity="0" StrokeThickness="1" Fill="{StaticResource DisabledVisualElement}" Width="18" Height="18" />
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Button-->

    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="MyMahButtonStyle" BasedOn="{StaticResource SquareButtonStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="MyMahAccentedButtonStyle" BasedOn="{StaticResource AccentedSquareButtonStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="MyClearButtonStyle" BasedOn="{StaticResource ChromelessButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
    </Style>

    <!--#endregion-->

    <!--#region ComboBox-->

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Width" Value="120"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
        <Setter Property="Padding" Value="3,3" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!--#endregion-->

    <!--#region ListBox-->

    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Width" Value="120"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Padding" Value="3,3" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!--#endregion-->

    <!--#region MahTabItem-->

    <Style TargetType="{x:Type mah:MetroTabItem}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type mah:MetroTabItem}">
                    <Border
                        x:Name="Spacer"
                        Width="Auto"
                        Height="Auto"
                        Padding="0 0 0 0"
                        Margin="0 0 0 0"
                        BorderBrush="Transparent"
                        BorderThickness="0">
                        <Border
                            x:Name="Border"
                            BorderThickness="0,0,0,0"
                            CornerRadius="0,0,0,0"
                            Cursor="Hand"
                            VerticalAlignment="Top">
                            <ContentPresenter
                                x:Name="ContentSite"
                                TextElement.FontSize="14pt"
                                TextElement.FontFamily="Arial"
                                TextElement.Foreground="White"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Left"
                                ContentSource="Header"
                                Margin="0,0,0,0"
                                Width="Auto"
                                Height="Auto" 
                                Cursor="Arrow" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region MahTile-->

    <Style x:Key="BaseTile" TargetType="{x:Type mah:Tile}">
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{x:Null}" />
        <!-- xaml serializer nie poradzi sobie z helperem -->
        <Setter Property="CountFontSize" Value="28" />
        <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
        <Setter Property="Margin" Value="0,0,5,5" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="TitleFontSize" Value="16" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50" />
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mah:Tile">
                    <Grid>
                        <Border x:Name="PART_Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Orientation="Horizontal">
                                    <ContentPresenter RecognizesAccessKey="True" />
                                    <TextBlock VerticalAlignment="Center"
                                               FontSize="{TemplateBinding CountFontSize}"
                                               Text="{TemplateBinding Count}" />
                                </StackPanel>
                                <Label HorizontalAlignment="{TemplateBinding HorizontalTitleAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalTitleAlignment}"
                                       Foreground="{TemplateBinding Foreground}">
                                    <AccessText Margin="3"
                                                FontSize="{TemplateBinding TitleFontSize}"
                                                Foreground="{TemplateBinding Foreground}"
                                                Text="{TemplateBinding Title}"
                                                TextWrapping="Wrap" />
                                </Label>
                            </Grid>
                        </Border>
                        <Border x:Name="PART_HoverBorder"
                                BorderBrush="{TemplateBinding mah:ControlsHelper.MouseOverBorderBrush}"
                                BorderThickness="2"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ControlsHelper.MouseOverBorderBrush), Mode=OneWay, Converter={x:Static shared:IsNullConverter.Instance}}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver, Mode=OneWay}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_HoverBorder" Property="Opacity" Value="0.6" />
                        </MultiDataTrigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform CenterX="0.5"
                                                    CenterY="0.5"
                                                    ScaleX="0.98"
                                                    ScaleY="0.98" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseTileIcon" TargetType="iconPacks:PackIconModern">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="12.5,12.5,0,0" />
    </Style>

    <Style x:Key="BaseTileIconEntypo" TargetType="iconPacks:PackIconEntypo">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="12.5,12.5,0,0" />
    </Style>

    <Style x:Key="BaseTileTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="50,0,0,0" />
    </Style>

    <!-- Main Menu Tile -->

    <SolidColorBrush x:Key="MouseOverMainMenuTileBrush" Color="#FF000096" />
    <SolidColorBrush x:Key="DefaultMainMenuTileBrush" Color="#FF000040" />

    <Style x:Key="MainMenuTile" TargetType="mah:Tile" BasedOn="{StaticResource BaseTile}">
        <Setter Property="Background" Value="{StaticResource DefaultMainMenuTileBrush}" />
    </Style>
    <Style x:Key="MainMenuIcon" TargetType="iconPacks:PackIconModern" BasedOn="{StaticResource BaseTileIcon}" />
    <Style x:Key="MainMenuTextblock" TargetType="TextBlock" BasedOn="{StaticResource BaseTileTextBlock}" />

    <!-- Main Menu Resize Tile -->

    <SolidColorBrush x:Key="MouseOverMainMenuResizeTileBrush" Color="DarkRed" />
    <SolidColorBrush x:Key="DefaultMainMenuResizeTileBrush" Color="#FF1E1E1E" />

    <Style x:Key="MainMenuResizeTile" TargetType="mah:Tile" BasedOn="{StaticResource BaseTile}">
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{StaticResource DefaultMainMenuResizeTileBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Top"/>
    </Style>

    <Style x:Key="MainMenuResizeIcon" TargetType="iconPacks:PackIconModern" BasedOn="{StaticResource BaseTileIcon}">
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Margin" Value="17.5,7.5,0,0" />
    </Style>

    <!-- Flyout Header Tile -->

    <SolidColorBrush x:Key="MouseOverFlyoutHeaderTileBrush" Color="#FF000096" />
    <SolidColorBrush x:Key="DefaultFlyoutHeaderTileBrush" Color="#FF000030" />
    <SolidColorBrush x:Key="DefaultFlyoutHeaderIconBrush" Color="#FF000000" />

    <Style x:Key="FlyoutHeaderTile" TargetType="mah:Tile" BasedOn="{StaticResource BaseTile}">
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="260" />
        <Setter Property="Background" Value="{StaticResource DefaultFlyoutHeaderTileBrush}" />
    </Style>

    <Style x:Key="FlyoutHeaderArrow" TargetType="iconPacks:PackIconEntypo" BasedOn="{StaticResource BaseTileIconEntypo}">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="5,5,0,0" />
        <Setter Property="Kind" Value="ChevronWithCircleLeft" />
    </Style>

    <Style x:Key="FlyoutHeaderIcon" TargetType="iconPacks:PackIconModern" BasedOn="{StaticResource BaseTileIcon}">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Padding" Value="12.5" />
        <Setter Property="Margin" Value="50,0,0,0" />
        <Setter Property="Background" Value="{StaticResource DefaultFlyoutHeaderIconBrush}" />
    </Style>

    <Style x:Key="FlyoutHeaderTextblock" TargetType="TextBlock" BasedOn="{StaticResource BaseTileTextBlock}">
        <Setter Property="Margin" Value="110,0,0,0" />
    </Style>

    <!-- Main Grid Tab Tile -->

    <SolidColorBrush x:Key="MouseOverMainGridTabTileBrush" Color="#FF888800" />
    <SolidColorBrush x:Key="DefaultMainGridTabTileBrush" Color="#FF404000" />
    <Style x:Key="MainGridTabTile" TargetType="mah:Tile" BasedOn="{StaticResource BaseTile}">
        <Setter Property="Width" Value="200" />
        <Setter Property="Background" Value="{StaticResource DefaultMainGridTabTileBrush}" />
    </Style>
    <Style x:Key="MainGridTabIcon" TargetType="iconPacks:PackIconModern" BasedOn="{StaticResource BaseTileIcon}" />
    <Style x:Key="MainGridTabTextblock" TargetType="TextBlock" BasedOn="{StaticResource BaseTileTextBlock}" />

    <!-- Database Tab Tile -->

    <SolidColorBrush x:Key="MouseOverDatabaseTabTileBrush" Color="#FF963E00" />
    <SolidColorBrush x:Key="DefaultDatabaseTabTileBrush" Color="#FF962D00" />
    <Style x:Key="DatabaseTabTile" TargetType="mah:Tile" BasedOn="{StaticResource BaseTile}">
        <Setter Property="Width" Value="200" />
        <Setter Property="Background" Value="{StaticResource DefaultDatabaseTabTileBrush}" />
    </Style>
    <Style x:Key="DatabaseTabIcon" TargetType="iconPacks:PackIconModern" BasedOn="{StaticResource BaseTileIcon}"/>
    <Style x:Key="DatabaseTabTextblock" TargetType="TextBlock" BasedOn="{StaticResource BaseTileTextBlock}"/>

    <!-- Options Tab Tile -->

    <SolidColorBrush x:Key="MouseOverOptionsTabTileBrush" Color="#FF009600" />
    <SolidColorBrush x:Key="DefaultOptionsTabTileBrush" Color="#FF003A00" />
    <Style x:Key="OptionsTabTile" TargetType="mah:Tile" BasedOn="{StaticResource BaseTile}">
        <Setter Property="Width" Value="200" />
        <Setter Property="Background" Value="{StaticResource DefaultOptionsTabTileBrush}" />
    </Style>
    <Style x:Key="OptionsTabIcon" TargetType="iconPacks:PackIconModern" BasedOn="{StaticResource BaseTileIcon}" />
    <Style x:Key="OptionsTabTextblock" TargetType="TextBlock" BasedOn="{StaticResource BaseTileTextBlock}" />

    <!-- Context Menu Tiles -->

    <SolidColorBrush x:Key="MouseOverContextMenuItemTileBrush" Color="#FF000096" />
    <SolidColorBrush x:Key="DefaultContextMenuItemTileBrush" Color="#FF000040" />
    <SolidColorBrush x:Key="DefaultContextMenuStackPanelBtush" Color="#FF000000" />

    <Style x:Key="ContextMenuItemTile" TargetType="mah:Tile" BasedOn="{StaticResource BaseTile}">
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Background" Value="{StaticResource DefaultContextMenuItemTileBrush}" />
        <Setter Property="Margin" Value="2,2,2,2" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="ContextMenuItemIcon" TargetType="iconPacks:PackIconModern" BasedOn="{StaticResource BaseTileIcon}">
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Margin" Value="7.5,7.5,0,0" />
    </Style>

    <Style x:Key="ContextMenuItemTextblock" TargetType="TextBlock" BasedOn="{StaticResource BaseTileTextBlock}">
        <Setter Property="Margin" Value="30,0,0,0" />
    </Style>

    <Style x:Key="ContextMenuStackPanel" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Background" Value="{StaticResource DefaultContextMenuStackPanelBtush}" />
    </Style>

    <!--#endregion-->

    <!-- #region Tilesmenu -->

    <DataTemplate x:Key="TilesMenuOptionTileDataTemplate">
        <Grid>
            <iconPacks:PackIconModern Kind="{Binding Icon, RelativeSource={RelativeSource FindAncestor, 
                AncestorType={x:Type controls:TilesMenuOption}}}" Style="{StaticResource BaseTileIcon}" />
            <TextBlock Text="{Binding Description, RelativeSource={RelativeSource FindAncestor, 
                AncestorType={x:Type controls:TilesMenuOption}}}" Style="{StaticResource BaseTileTextBlock}" />
        </Grid>
    </DataTemplate>

    <!--#endregion-->

    <!--#region RadialGauge-->

    <converters:ProgressToAngleConverter x:Key="ProgressConverter"/>
    <Style TargetType="{x:Type ProgressBar}" x:Key="ProgressBarStyle">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid>
                        <Ellipse Stroke="Black" Fill="{TemplateBinding Background}"/>
                        <Ellipse Stroke="Black" Margin="20" Fill="#FF181818"/>
                        <utilClasses:Arc StrokeThickness="12" Stroke="{TemplateBinding BorderBrush}" Margin="4">
                            <utilClasses:Arc.StartAngle>
                                <MultiBinding Converter="{StaticResource ProgressConverter}">
                                    <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="." RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </utilClasses:Arc.StartAngle>
                            <utilClasses:Arc.EndAngle>
                                <MultiBinding Converter="{StaticResource ProgressConverter}">
                                    <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="." RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </utilClasses:Arc.EndAngle>
                        </utilClasses:Arc>
                        <TextBlock Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0:0\}}"
                                       Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"
                                       FontSize="16" FontWeight="Normal"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <Style x:Key="GridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

</ResourceDictionary>